前情回顾

1. 非阻塞IO

   setblocking()
   settimeout()

2. IO 多路复用

   select

   poll

   epoll

   * 三者的区别

3. 基于IO多路复用的网络并发模型

4. 高并发
   衡量指标   综合的技术

练习： 编写一个程序完成，如果浏览器访问
127.0.0.1:8888/python的时候可以访问到
Python.html网页，否则则访问不到任何内容，得到404
响应

提示 ： 提取请求内容 --》 分情况讨论
       读取网页内容  作为响应体发送

Web server 服务

需求分析

技术点 ：　HTTP协议
         IO多路复用的并发网络模型

功能划分和封装： 类封装

协议 ： http协议

逻辑实现步骤


功能性类 / 类接口

  socket()
     实例化对象 --> 不同的对象做些属性设置-->通信

  Process()/Thread()
     实例化对象 --> 绑定事件 --> 启动进程线程服务

  核心功能是干什么：网页分享
  使用流程：实例化对象 -> 启动服务
  传参 ： 服务器地址  网页文件

  用户自己决定的是： 服务器地址  网页文件

逻辑步骤：
   tcp套接字
   搭建IO多路复用的并发模型
   接收客户端（浏览器）请求
   解析客户端发送的请求
   根据请求组织数据内容
   将数据内容形成http响应格式返回给浏览器
